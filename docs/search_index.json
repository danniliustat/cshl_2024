[["gwas-with-binary-trait.html", "Chapter 6 GWAS with Binary Trait 6.1 Data Preparation 6.2 Genome-Wide Case/Control Association Test (in PLINK) 6.3 Manhattan Plot and Q-Q Plot 6.4 Generate Manhattan plot 6.5 Generate Q-Q plot 6.6 Multiple-Test Correction 6.7 Top 10 SNPs", " Chapter 6 GWAS with Binary Trait This section introduces a hands-on practice of a genome-wide association study with binary traits. The reference paper provided a criteria to define the binary groups. The groups were divided based on MR(metabolite ratio) values, such that groups are coded as 1 if MR &lt; 0.0146 and 0 if MR&gt;= 0.0146. We will adopt their citeria in this notebook to define the binary groups. Then we perform a genome-wide case/control association analysis for the binary traits. Reference paper: Hennig EE, Piatkowska M, Goryca K, Pospiech E, Paziewska A, Karczmarski J, Kluska A, Brewczynska E, Ostrowski J “Non-CYP2D6 variants selected by GWAS improved the prediction of impaired tamoxifen metabolism in breast cancer patients.” J Clin Med. 2019 Aug; 8(8): 1087. doi: 10.3390/jcm8081087 # change the path below to where you saved &quot;cshl_2024&quot; folder ## run in R Terminal mydir=&quot;/path/to/cshl_2024/Data/case_data_binary&quot; cd $mydir # R codes- run in R Console setwd(&quot;/path/to/cshl_2024/Data/case_data_binary&quot;) mydir&lt;-getwd() 6.1 Data Preparation Phenotype data (using R): We convert the continuous trait of Z-endoxifen ratio from the previous notebook to binary traits based on the cut-off value 0.0146: Values greater than 0.0146 are coded as 1 Values less than 0.0146 are coded as 2 Genotype data: genotype.ped genotype.map The following code load the imputed phenotype data phenotype0.txt and extract our target phenotype data of Z-endoxifen ratio. Then, we convert the continuous traits into binary traits, and save the binary group variable binary_pheno0 to file binary_phenotype0.txt. # R codes- run in R Console pheno0=fread(&quot;phenotype0.txt&quot;,header=F) #read phenotype data binary_pheno0=pheno0[,3] binary_pheno0[binary_pheno0&gt;=0.0146]=1 #code values greater than 0 as 1 binary_pheno0[binary_pheno0&lt;0.0146]=2 #code values less than 0 as 2 write.table(binary_pheno0,&quot;binary_phenotype0.txt&quot;,quote=F,row.names=F,col.names=F,sep=&quot; &quot;) #save binary phenotype data head(binary_pheno0) ## V3 ## &lt;num&gt; ## 1: 1 ## 2: 1 ## 3: 2 ## 4: 2 ## 5: 2 ## 6: 2 After the binary group is ready, we use the same procedure in section 5.3 of last notebook to prepare PLINK alternate phenotype file (in Linux): Note: famID.txt and samID.txt are both required for PLINK step. They are already prepared in last notebook. ## bash codes- run in terminal paste famID.txt samID.txt binary_phenotype0.txt &gt; binary_phenotype.txt Take a look at the prepared phenotype data. # R codes- run in R Console binary_pheno&lt;-read.table(&quot;binary_phenotype.txt&quot;) head(binary_pheno) ## V1 V2 V3 ## 1 1 3TX 1 ## 2 2 23TX 1 ## 3 3 41TX 2 ## 4 4 54TX 2 ## 5 5 76TX 2 ## 6 6 94TX 2 6.2 Genome-Wide Case/Control Association Test (in PLINK) Similar as last notebook, we will still use PLINK to perform association test. The only change is the phenotype file. The following code conducts the genome-wide association test by PLINK in bash code. This code will take several minutes to finish. ## # both Mac and Windows can run in Terminal # windows users ../../Tools/PLINK/plink_win64_20231211/plink.exe \\ --noweb --file genotype_1k --assoc --pheno binary_phenotype.txt --adjust --all-pheno --out younameit # macOS users ../../Tools/PLINK/plink_mac_20231211/plink \\ --noweb --file genotype_1k --assoc --pheno binary_phenotype.txt --adjust --all-pheno --out younameit ## PLINK v1.90b7.2 64-bit (11 Dec 2023) www.cog-genomics.org/plink/1.9/ ## (C) 2005-2023 Shaun Purcell, Christopher Chang GNU General Public License v3 ## Logging to younameit.log. ## Options in effect: ## --adjust ## --all-pheno ## --assoc ## --file genotype_1k ## --noweb ## --out younameit ## --pheno binary_phenotype.txt ## ## Note: --noweb has no effect since no web check is implemented yet. ## 16384 MB RAM detected; reserving 8192 MB for main workspace. ## Scanning .ped file... 0%\b\b1%\b\b1%\b\b2%\b\b2%\b\b3%\b\b3%\b\b4%\b\b4%\b\b5%\b\b5%\b\b6%\b\b6%\b\b7%\b\b7%\b\b8%\b\b8%\b\b9%\b\b9%\b\b10%\b\b\b10%\b\b\b11%\b\b\b11%\b\b\b12%\b\b\b13%\b\b\b13%\b\b\b14%\b\b\b14%\b\b\b15%\b\b\b15%\b\b\b16%\b\b\b16%\b\b\b17%\b\b\b17%\b\b\b18%\b\b\b18%\b\b\b19%\b\b\b19%\b\b\b20%\b\b\b20%\b\b\b21%\b\b\b21%\b\b\b22%\b\b\b22%\b\b\b23%\b\b\b23%\b\b\b24%\b\b\b24%\b\b\b25%\b\b\b26%\b\b\b26%\b\b\b27%\b\b\b27%\b\b\b28%\b\b\b28%\b\b\b29%\b\b\b29%\b\b\b30%\b\b\b30%\b\b\b31%\b\b\b31%\b\b\b32%\b\b\b32%\b\b\b33%\b\b\b33%\b\b\b34%\b\b\b34%\b\b\b35%\b\b\b35%\b\b\b36%\b\b\b36%\b\b\b37%\b\b\b38%\b\b\b38%\b\b\b39%\b\b\b39%\b\b\b40%\b\b\b40%\b\b\b41%\b\b\b41%\b\b\b42%\b\b\b42%\b\b\b43%\b\b\b43%\b\b\b44%\b\b\b44%\b\b\b45%\b\b\b45%\b\b\b46%\b\b\b46%\b\b\b47%\b\b\b47%\b\b\b48%\b\b\b48%\b\b\b49%\b\b\b49%\b\b\b50%\b\b\b51%\b\b\b51%\b\b\b52%\b\b\b52%\b\b\b53%\b\b\b53%\b\b\b54%\b\b\b54%\b\b\b55%\b\b\b55%\b\b\b56%\b\b\b56%\b\b\b57%\b\b\b57%\b\b\b58%\b\b\b58%\b\b\b59%\b\b\b59%\b\b\b60%\b\b\b60%\b\b\b61%\b\b\b61%\b\b\b62%\b\b\b63%\b\b\b63%\b\b\b64%\b\b\b64%\b\b\b65%\b\b\b65%\b\b\b66%\b\b\b66%\b\b\b67%\b\b\b67%\b\b\b68%\b\b\b68%\b\b\b69%\b\b\b69%\b\b\b70%\b\b\b70%\b\b\b71%\b\b\b71%\b\b\b72%\b\b\b72%\b\b\b73%\b\b\b73%\b\b\b74%\b\b\b74%\b\b\b75%\b\b\b76%\b\b\b76%\b\b\b77%\b\b\b77%\b\b\b78%\b\b\b78%\b\b\b79%\b\b\b79%\b\b\b80%\b\b\b80%\b\b\b81%\b\b\b81%\b\b\b82%\b\b\b82%\b\b\b83%\b\b\b83%\b\b\b84%\b\b\b84%\b\b\b85%\b\b\b85%\b\b\b86%\b\b\b86%\b\b\b87%\b\b\b88%\b\b\b88%\b\b\b89%\b\b\b89%\b\b\b90%\b\b\b90%\b\b\b91%\b\b\b91%\b\b\b92%\b\b\b92%\b\b\b93%\b\b\b93%\b\b\b94%\b\b\b94%\b\b\b95%\b\b\b95%\b\b\b96%\b\b\b96%\b\b\b97%\b\b\b97%\b\b\b98%\b\b\b98%\b\b\b99%\b\b\b100%.ped scan complete (for binary autoconversion). ## Performing single-pass .bed write (1000 variants, 192 people). ## 0%\b\b1%\b\b2%\b\b3%\b\b4%\b\b5%\b\b6%\b\b7%\b\b8%\b\b9%\b\b10%\b\b\b11%\b\b\b12%\b\b\b13%\b\b\b14%\b\b\b15%\b\b\b16%\b\b\b17%\b\b\b18%\b\b\b19%\b\b\b20%\b\b\b21%\b\b\b22%\b\b\b23%\b\b\b24%\b\b\b25%\b\b\b26%\b\b\b27%\b\b\b28%\b\b\b29%\b\b\b30%\b\b\b31%\b\b\b32%\b\b\b33%\b\b\b34%\b\b\b35%\b\b\b36%\b\b\b37%\b\b\b38%\b\b\b39%\b\b\b40%\b\b\b41%\b\b\b42%\b\b\b43%\b\b\b44%\b\b\b45%\b\b\b46%\b\b\b47%\b\b\b48%\b\b\b49%\b\b\b50%\b\b\b51%\b\b\b52%\b\b\b53%\b\b\b54%\b\b\b55%\b\b\b56%\b\b\b57%\b\b\b58%\b\b\b59%\b\b\b60%\b\b\b61%\b\b\b62%\b\b\b63%\b\b\b64%\b\b\b65%\b\b\b66%\b\b\b67%\b\b\b68%\b\b\b69%\b\b\b70%\b\b\b71%\b\b\b72%\b\b\b73%\b\b\b74%\b\b\b75%\b\b\b76%\b\b\b77%\b\b\b78%\b\b\b79%\b\b\b80%\b\b\b81%\b\b\b82%\b\b\b83%\b\b\b84%\b\b\b85%\b\b\b86%\b\b\b87%\b\b\b88%\b\b\b89%\b\b\b90%\b\b\b91%\b\b\b92%\b\b\b93%\b\b\b94%--file: younameit-temporary.bed + younameit-temporary.bim + ## younameit-temporary.fam written. ## 1000 variants loaded from .bim file. ## 192 people (0 males, 192 females) loaded from .fam. ## 192 phenotype values present after --pheno. ## Using 1 thread (no multithreaded calculations invoked). ## Before main variant filters, 192 founders and 0 nonfounders present. ## Calculating allele frequencies... 0%\b\b1%\b\b2%\b\b3%\b\b4%\b\b5%\b\b6%\b\b7%\b\b8%\b\b9%\b\b10%\b\b\b11%\b\b\b12%\b\b\b13%\b\b\b14%\b\b\b15%\b\b\b16%\b\b\b17%\b\b\b18%\b\b\b19%\b\b\b20%\b\b\b21%\b\b\b22%\b\b\b23%\b\b\b24%\b\b\b25%\b\b\b26%\b\b\b27%\b\b\b28%\b\b\b29%\b\b\b30%\b\b\b31%\b\b\b32%\b\b\b33%\b\b\b34%\b\b\b35%\b\b\b36%\b\b\b37%\b\b\b38%\b\b\b39%\b\b\b40%\b\b\b41%\b\b\b42%\b\b\b43%\b\b\b44%\b\b\b45%\b\b\b46%\b\b\b47%\b\b\b48%\b\b\b49%\b\b\b50%\b\b\b51%\b\b\b52%\b\b\b53%\b\b\b54%\b\b\b55%\b\b\b56%\b\b\b57%\b\b\b58%\b\b\b59%\b\b\b60%\b\b\b61%\b\b\b62%\b\b\b63%\b\b\b64%\b\b\b65%\b\b\b66%\b\b\b67%\b\b\b68%\b\b\b69%\b\b\b70%\b\b\b71%\b\b\b72%\b\b\b73%\b\b\b74%\b\b\b75%\b\b\b76%\b\b\b77%\b\b\b78%\b\b\b79%\b\b\b80%\b\b\b81%\b\b\b82%\b\b\b83%\b\b\b84%\b\b\b85%\b\b\b86%\b\b\b87%\b\b\b88%\b\b\b89%\b\b\b90%\b\b\b91%\b\b\b92%\b\b\b93%\b\b\b94%\b\b\b95%\b\b\b96%\b\b\b97%\b\b\b98%\b\b\b99%\b\b\b\b done. ## Warning: Nonmissing nonmale Y chromosome genotype(s) present; many commands ## treat these as missing. ## Total genotyping rate is 0.995331. ## 1000 variants and 192 people pass filters and QC. ## Among remaining phenotypes, 97 are cases and 95 are controls. ## 192 phenotype values present after --pheno. ## P1 has 97 cases and 95 controls. ## Writing C/C --assoc report to younameit.P1.assoc ... 0%\b\b11%\b\b\b16%\b\b\b20%\b\b\b24%\b\b\b27%\b\b\b43%\b\b\b50%\b\b\b53%\b\b\b56%\b\b\b61%\b\b\b64%\b\b\b68%\b\b\b70%\b\b\b72%\b\b\b73%\b\b\b76%\b\b\b78%\b\b\b79%\b\b\b82%\b\b\b84%\b\b\b85%\b\b\b94%\b\b\b96%\b\b\b99%\b\b\bdone. ## --adjust: Genomic inflation est. lambda (based on median chisq) = 1.37231. ## 0%\b\b1%\b\b2%\b\b3%\b\b4%\b\b5%\b\b6%\b\b7%\b\b8%\b\b9%\b\b10%\b\b\b11%\b\b\b12%\b\b\b13%\b\b\b14%\b\b\b15%\b\b\b16%\b\b\b17%\b\b\b18%\b\b\b19%\b\b\b20%\b\b\b21%\b\b\b22%\b\b\b23%\b\b\b24%\b\b\b25%\b\b\b26%\b\b\b27%\b\b\b28%\b\b\b29%\b\b\b30%\b\b\b31%\b\b\b32%\b\b\b33%\b\b\b34%\b\b\b35%\b\b\b36%\b\b\b37%\b\b\b38%\b\b\b39%\b\b\b40%\b\b\b41%\b\b\b42%\b\b\b43%\b\b\b44%\b\b\b45%\b\b\b46%\b\b\b47%\b\b\b48%\b\b\b49%\b\b\b50%\b\b\b51%\b\b\b52%\b\b\b53%\b\b\b54%\b\b\b55%\b\b\b56%\b\b\b57%\b\b\b58%\b\b\b59%\b\b\b60%\b\b\b61%\b\b\b62%\b\b\b63%\b\b\b64%\b\b\b65%\b\b\b66%\b\b\b67%\b\b\b68%\b\b\b69%\b\b\b70%\b\b\b71%\b\b\b72%\b\b\b73%\b\b\b74%\b\b\b75%\b\b\b76%\b\b\b77%\b\b\b78%\b\b\b79%\b\b\b80%\b\b\b81%\b\b\b82%\b\b\b83%\b\b\b84%\b\b\b85%\b\b\b86%\b\b\b87%\b\b\b88%\b\b\b89%\b\b\b90%\b\b\b91%\b\b\b92%\b\b\b93%\b\b\b94%\b\b\b95%\b\b\b96%\b\b\b97%\b\b\b98%\b\b\b99%\b\b\b--adjust values (805 variants) written to younameit.P1.assoc.adjusted . –noweb suppress checking for new version, –file specifies .ped and .map files, –assoc performs case/control or QTL association, you can also perform other tests by changing the options, –pheno specifies alternate phenotype, –adjust generates a file of adjusted significance values that correct for all tests performed and other metrics, –all-pheno performs association test for all phenotypes in binary_phenotype.tix file, –out specifies output filename. This will generate the files younameit.P1.assoc with fields as follows: CHR Chromosome SNP SNP ID BP Physical position (base-pair) A1 Minor allele name (based on whole sample) F_A Frequency of this allele in cases F_U Frequency of this allele in controls A2 Major allele name CHISQ Basic allelic test chi-square (1df) P Asymptotic p-value for this test OR Estimated odds ratio (for A1, i.e. A2 is reference) –adjust generates the file younameit.adjust, which contains the following fields CHR Chromosome number SNP SNP identifer UNADJ Unadjusted p-value GC Genomic-control corrected p-values BONF Bonferroni single-step adjusted p-values HOLM Holm (1979) step-down adjusted p-values SIDAK_SS Sidak single-step adjusted p-values SIDAK_SD Sidak step-down adjusted p-values FDR_BH Benjamini &amp; Hochberg (1995) step-up FDR control FDR_BY Benjamini &amp; Yekutieli (2001) step-up FDR control 6.3 Manhattan Plot and Q-Q Plot Similar to the GWAS study for continuous traits, we generate Manhattan Plot and Q-Q Plot to visualize the results of GWAS test. The Manhattan plot is a good way to visualize the resuls of GWAS test. For more details, please refer: https://en.wikipedia.org/wiki/Manhattan_plot The Q-Q plot for GWAS is another way to visualize the signals. For more details, please refer:https://genome.sph.umich.edu/wiki/Code_Sample:_Generating_QQ_Plots_in_R qqman is an R package for creating Q-Q and manhattan plots from GWAS results. See the reference page http://www.gettinggeneticsdone.com/2014/05/qqman-r-package-for-qq-and-manhattan-plots-for-gwas-results.html. The qqman R package assumes you have columns named SNP, CHR, BP, and P, corresponding to the SNP name (rs number), chromosome number, base-pair position, and p-value. The following code prepares qqman R input files (CHR, SNP, BP, P) (in Linux) ## bash codes- run in terminal awk &#39;{print $1,$2,$3,$9}&#39; younameit.P1.assoc &gt; P1.assoc Here is sample data for P1.assoc CHR SNP BP P 1 rs9701055 565433 0.757 1 rs3094315 752566 0.7004 1 rs2073813 753541 0.467 1 rs3131969 754182 0.131 Load association results. Loaded results are in assoc. # R codes- run in R Console assoc=fread(&quot;P1.assoc&quot;, header=T) assoc=assoc[(assoc$CHR!=0) &amp; (!is.na(assoc$P)),] head(assoc) ## CHR SNP BP P ## &lt;int&gt; &lt;char&gt; &lt;int&gt; &lt;num&gt; ## 1: 1 rs307354 1264539 0.98080 ## 2: 1 rs12121577 11794553 0.56050 ## 3: 1 rs4845898 12339619 0.05366 ## 4: 1 rs665691 22960354 0.88740 ## 5: 1 rs7537875 24695151 0.71760 ## 6: 1 rs8876 25687308 0.64030 6.4 Generate Manhattan plot We use the same commands as continuous trait to generate a Manhattan plot. The following code will take several minutes to finish. # R codes- run in R Console png(filename=paste0(&quot;Manhattan_Plot_for_binary_z-endoxifen_ratio.png&quot;), type=&quot;cairo&quot;) manhattan(assoc, col=c(&quot;dimgray&quot;, &quot;darkgoldenrod1&quot;), suggestiveline=F, genomewideline=F) dev.off() ## quartz_off_screen ## 2 # R codes- run in R Console img &lt;- readPNG(&quot;Manhattan_Plot_for_binary_z-endoxifen_ratio.png&quot;) grid::grid.raster(img) This plot is very similar compared with the Manhattan plot we got for continuous trait. They both contain a very significant SNP in chromosome 22, however, this SNP for binary trait is not so significant as for continuous trait. The y-axis value for continuous trait is about 20. 6.5 Generate Q-Q plot Similarly, a Q-Q plot is generated with qq function to visualize the test results. This code will take several minutes to finish. # R codes- run in R Console png(filename=paste0(&quot;Q-Q_Plot_for_binary_z-endoxifen_ratio.png&quot;), type=&quot;cairo&quot;) qq(assoc$P) dev.off() ## quartz_off_screen ## 2 # R codes- run in R Console img &lt;- readPNG(&quot;Q-Q_Plot_for_binary_z-endoxifen_ratio.png&quot;) grid::grid.raster(img) Q-Q plot still has a long tail, meaning that there are causal polymorphisms. 6.6 Multiple-Test Correction Again, since we simultaneously test the significance of each SNP, we need to control the overall type-I error rate using false discovery rate (FDR). Prepare R input files (in Linux) The following code extracts the CHR, SNP, UNADJ, FDR_BH from the PLINK output younameit.adjusted. The results are stored in the files: P1.assoc.adjusted. ## bash codes- run in terminal awk &#39;{print $1,$2,$3,$9}&#39; younameit.P1.assoc.adjusted &gt; P1.assoc.adjusted Significant SNPs after a multiple-test correction of FDR (using R) The following code identifies the significant SNPs by the FDR adjusted p-values with cutoff 0.05. # R codes- run in R Console assoc.adjusted=fread(&quot;P1.assoc.adjusted&quot;)#load association results sigidx=which(assoc.adjusted$FDR_BH&lt;0.05) #index of significant SNPs sigSNP=assoc.adjusted[sigidx,] #extract association results for significant SNPs write.table(sigSNP, &quot;significant_SNPs_for_z-endoxifen_ratio.txt&quot;, row.names=F, col.names=T, quote=F, sep=&quot; &quot;) #save results #view result dim(sigSNP) ## [1] 79 4 head(sigSNP) ## CHR SNP UNADJ FDR_BH ## &lt;int&gt; &lt;char&gt; &lt;num&gt; &lt;num&gt; ## 1: 22 rs7245 1.172e-15 3.144e-13 ## 2: 22 rs2284087 1.172e-15 3.144e-13 ## 3: 22 rs5758589 1.172e-15 3.144e-13 ## 4: 22 kgp7814563 2.593e-15 5.218e-13 ## 5: 22 kgp11017363 1.228e-14 1.647e-12 ## 6: 22 kgp137964 1.228e-14 1.647e-12 There are 79 significant SNPs identified. However, remember that we have many SNPs with kgp identifiers, we still need to check if they have matched rs identifiers using UCSC Table Browser. First we need to match genotype information such as position. # R codes- run in R Console map&lt;- fread(&quot;genotype_1k.map&quot;,header=F) names(map) &lt;- c(&quot;CHR&quot;,&quot;SNP&quot;,&quot;GP&quot;,&quot;BP&quot;) # assign header zr_result &lt;- fread(&quot;significant_SNPs_for_z-endoxifen_ratio.txt&quot;) idx &lt;- match(zr_result$SNP, map$SNP)#index of map that match with SNP in result zr_result$BP &lt;- map$BP[idx] head(zr_result) ## CHR SNP UNADJ FDR_BH BP ## &lt;int&gt; &lt;char&gt; &lt;num&gt; &lt;num&gt; &lt;int&gt; ## 1: 22 rs7245 1.172e-15 3.144e-13 42481849 ## 2: 22 rs2284087 1.172e-15 3.144e-13 42485671 ## 3: 22 rs5758589 1.172e-15 3.144e-13 42518382 ## 4: 22 kgp7814563 2.593e-15 5.218e-13 42465788 ## 5: 22 kgp11017363 1.228e-14 1.647e-12 42348790 ## 6: 22 kgp137964 1.228e-14 1.647e-12 42359204 dim(zr_result) #get number of significant SNPs ## [1] 79 5 Next, we will extract the SNPs with kgp identifier, and prepare the table that will be submitted to UCSC. # R codes- run in R Console kgp_snps &lt;- zr_result[grepl(&quot;kgp&quot;,zr_result$SNP),] head(kgp_snps) ## CHR SNP UNADJ FDR_BH BP ## &lt;int&gt; &lt;char&gt; &lt;num&gt; &lt;num&gt; &lt;int&gt; ## 1: 22 kgp7814563 2.593e-15 5.218e-13 42465788 ## 2: 22 kgp11017363 1.228e-14 1.647e-12 42348790 ## 3: 22 kgp137964 1.228e-14 1.647e-12 42359204 ## 4: 22 kgp9081934 3.649e-14 2.558e-12 42389839 ## 5: 22 kgp12016588 3.649e-14 2.558e-12 42395960 ## 6: 22 kgp11007658 3.649e-14 2.558e-12 42401749 kgp_snps$CHR&lt;- paste0(&quot;chr&quot;,kgp_snps$CHR) kgp_snps$BP_1&lt;- kgp_snps$BP-1 fwrite(kgp_snps[,c(&quot;CHR&quot;,&quot;BP_1&quot;,&quot;BP&quot;,&quot;SNP&quot;)], &quot;kgp_snps.txt&quot;, sep=&quot; &quot;, quote=F, row.name=F, col.name=F) After matching, we again got only 2 matched SNPs, same as in continuous study. # R codes- run in R Console kgp_rs&lt;- fread(&quot;kgp_rs.txt&quot;,header=F) names(kgp_rs)&lt;- c(&quot;CHR&quot;,&quot;BP_1&quot;,&quot;BP&quot;,&quot;SNP&quot;)# assign header idx &lt;- match(kgp_rs$BP, kgp_snps$BP)# get index of these matched SNPs in results kgp_match&lt;- kgp_snps[idx[!is.na(idx)],] kgp_match$SNP&lt;- kgp_rs$SNP[!is.na(idx)] # replace kgp identifier with rs identifier kgp_match ## CHR SNP UNADJ FDR_BH BP BP_1 ## &lt;char&gt; &lt;char&gt; &lt;num&gt; &lt;num&gt; &lt;int&gt; &lt;num&gt; ## 1: chr22 rs60133761 3.508e-11 6.567e-10 42668504 42668503 ## 2: chr22 rs140061401 3.649e-14 2.558e-12 42395960 42395959 After combining with other rs identified SNPs, we got a total of 29 significant SNPs after multiple test correction. # R codes- run in R Console rs_snps &lt;- zr_result[grepl(&quot;rs&quot;,zr_result$SNP),] kgp_match$CHR &lt;- &quot;22&quot; rs_snps &lt;- rbind(rs_snps, kgp_match[,-6]) fwrite(rs_snps, &quot;significant_snps_with_rs_for_z-endoxifen-ratio.txt&quot;, sep=&quot; &quot;, quote=F, row.name=F, col.name=T) dim(rs_snps) ## [1] 29 5 rs_snps ## CHR SNP UNADJ FDR_BH BP ## &lt;char&gt; &lt;char&gt; &lt;num&gt; &lt;num&gt; &lt;int&gt; ## 1: 22 rs7245 1.172e-15 3.144e-13 42481849 ## 2: 22 rs2284087 1.172e-15 3.144e-13 42485671 ## 3: 22 rs5758589 1.172e-15 3.144e-13 42518382 ## 4: 22 rs1063392 3.649e-14 2.558e-12 42454950 ## 5: 22 rs133335 3.814e-14 2.558e-12 42416056 ## 6: 22 rs5751247 2.015e-12 1.014e-10 42633054 ## 7: 22 rs8138080 2.271e-12 1.076e-10 42396371 ## 8: 22 rs5751191 3.974e-12 1.529e-10 42370991 ## 9: 22 rs1062753 3.988e-12 1.529e-10 42392811 ## 10: 22 rs4467371 5.090e-12 1.782e-10 42541328 ## 11: 22 rs932376 6.210e-12 1.993e-10 42614362 ## 12: 22 rs2011944 6.932e-12 1.993e-10 42569999 ## 13: 22 rs4453786 9.750e-12 2.707e-10 42563308 ## 14: 22 rs5751255 1.064e-11 2.856e-10 42648408 ## 15: 22 rs5751221 2.500e-11 5.296e-10 42516366 ## 16: 22 rs5758651 3.508e-11 6.567e-10 42609148 ## 17: 22 rs1052717 6.599e-11 1.181e-09 42281429 ## 18: 22 rs5751239 1.266e-10 2.080e-09 42592239 ## 19: 22 rs133280 4.811e-10 7.172e-09 42255525 ## 20: 22 rs134871 3.272e-09 4.704e-08 42652716 ## 21: 22 rs8140869 6.890e-08 8.946e-07 42344297 ## 22: 22 rs742086 1.797e-07 2.260e-06 42552253 ## 23: 22 rs5758511 2.643e-07 3.273e-06 42336172 ## 24: 22 rs6002673 4.638e-06 5.656e-05 42691296 ## 25: 22 rs7285782 5.222e-05 6.182e-04 42225018 ## 26: 22 rs17365991 8.325e-04 9.180e-03 41790179 ## 27: 22 rs9607821 2.249e-03 2.321e-02 41983938 ## 28: 22 rs60133761 3.508e-11 6.567e-10 42668504 ## 29: 22 rs140061401 3.649e-14 2.558e-12 42395960 ## CHR SNP UNADJ FDR_BH BP 6.7 Top 10 SNPs Here, we present the Top 10 SNPs and p-values for both binary and continuous Z-endoxifen ratio trait. # R codes- run in R Console # binary trait assoc_binary=read.table(&quot;significant_snps_with_rs_for_z-endoxifen-ratio.txt&quot;,header=T) #load association results for binary_r_met ordered_assoc_binary=assoc_binary[order(assoc_binary$FDR_BH),] #order association results based on p-value head(ordered_assoc_binary,10) #association results for the top 10 SNPs with the 10 smallest p-values ## CHR SNP UNADJ FDR_BH BP ## 1 22 rs7245 1.172e-15 3.144e-13 42481849 ## 2 22 rs2284087 1.172e-15 3.144e-13 42485671 ## 3 22 rs5758589 1.172e-15 3.144e-13 42518382 ## 4 22 rs1063392 3.649e-14 2.558e-12 42454950 ## 5 22 rs133335 3.814e-14 2.558e-12 42416056 ## 29 22 rs140061401 3.649e-14 2.558e-12 42395960 ## 6 22 rs5751247 2.015e-12 1.014e-10 42633054 ## 7 22 rs8138080 2.271e-12 1.076e-10 42396371 ## 8 22 rs5751191 3.974e-12 1.529e-10 42370991 ## 9 22 rs1062753 3.988e-12 1.529e-10 42392811 # R codes- run in R Console # continuous trait assoc_cont=read.table(&quot;../case_data/significant_snps_with_rs_for_z-endoxifen-ratio.txt&quot;,header=T) #load association results for binary_r_met ordered_assoc_cont=assoc_cont[order(assoc_cont$FDR_BH),] #order association results based on p-value head(ordered_assoc_cont,10) #association results for the top 10 SNPs with the 10 smallest p-values ## CHR SNP UNADJ FDR_BH BP ## 1 22 rs8138080 3.318e-20 1.335e-17 42396371 ## 2 22 rs1062753 5.643e-19 9.347e-17 42392811 ## 3 22 rs4467371 1.365e-18 1.570e-16 42541328 ## 4 22 rs7245 4.102e-18 2.540e-16 42481849 ## 5 22 rs2284087 4.102e-18 2.540e-16 42485671 ## 6 22 rs5758589 4.102e-18 2.540e-16 42518382 ## 7 22 rs5751247 6.923e-18 3.981e-16 42633054 ## 8 22 rs2011944 8.301e-18 4.176e-16 42569999 ## 9 22 rs4453786 1.068e-17 5.059e-16 42563308 ## 10 22 rs5751221 3.812e-17 1.534e-15 42516366 "]]
